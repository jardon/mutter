From: Robert Mader <robert.mader@posteo.de>
Date: Fri, 9 Dec 2022 21:47:32 +0100
Subject: window-actor/wayland: Ignore unmapped subsurfaces in direct scanout
 check

Clients expect us to ignore them, thus do so. Right now, if the topmost
subsurface is an unmapped subsurface, it will fail the
`meta_surface_actor_is_opaque()` check if it was never mapped before.
Further more, unmapped subsurfaces would wrongly disable our "only one
surface and fullscreen" optimization.

(cherry picked from commit 3d618d5e4579de058c4c1dac2b58187820c49f98)

Bug: https://gitlab.gnome.org/GNOME/mutter/-/issues/2550
Forwarded: https://gitlab.gnome.org/GNOME/mutter/-/merge_requests/2755
Forwarded: https://gitlab.gnome.org/GNOME/mutter/-/merge_requests/2763
Origin: upstream, 43.3, commit:44d95c6c3123ac26e82af67dcb56f3726ce0e6f4
---
 src/compositor/meta-window-actor-wayland.c | 22 +++++++++++++++-------
 1 file changed, 15 insertions(+), 7 deletions(-)

diff --git a/src/compositor/meta-window-actor-wayland.c b/src/compositor/meta-window-actor-wayland.c
index 3b87f01..29278a5 100644
--- a/src/compositor/meta-window-actor-wayland.c
+++ b/src/compositor/meta-window-actor-wayland.c
@@ -298,22 +298,30 @@ meta_window_actor_wayland_get_scanout_candidate (MetaWindowActor *actor)
   MetaWindowActorWayland *self = META_WINDOW_ACTOR_WAYLAND (actor);
   ClutterActor *surface_container = CLUTTER_ACTOR (self->surface_container);
   ClutterActor *child_actor;
-  MetaSurfaceActor *topmost_surface_actor;
+  ClutterActorIter iter;
+  MetaSurfaceActor *topmost_surface_actor = NULL;
   MetaWindow *window;
+  int n_mapped_surfaces = 0;
 
   if (clutter_actor_get_last_child (CLUTTER_ACTOR (self)) != surface_container)
     return NULL;
 
-  child_actor = clutter_actor_get_last_child (surface_container);
-  if (!child_actor)
-    return NULL;
+  clutter_actor_iter_init (&iter, surface_container);
+  while (clutter_actor_iter_next (&iter, &child_actor))
+    {
+      if (!clutter_actor_is_mapped (child_actor))
+        continue;
 
-  topmost_surface_actor = META_SURFACE_ACTOR (child_actor);
+      topmost_surface_actor = META_SURFACE_ACTOR (child_actor);
+      n_mapped_surfaces++;
+    }
+
+  if (!topmost_surface_actor)
+    return NULL;
 
   window = meta_window_actor_get_meta_window (actor);
   if (!meta_surface_actor_is_opaque (topmost_surface_actor) &&
-      !(meta_window_is_fullscreen (window) &&
-        clutter_actor_get_n_children (surface_container) == 1))
+      !(meta_window_is_fullscreen (window) && n_mapped_surfaces == 1))
     return NULL;
 
   return topmost_surface_actor;
