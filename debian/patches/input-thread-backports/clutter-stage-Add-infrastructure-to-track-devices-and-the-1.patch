From: =?utf-8?q?Jonas_Dre=C3=9Fler?= <verdre@v0yd.nl>
Date: Thu, 15 Oct 2020 16:39:00 +0200
Subject: clutter/stage: Add infrastructure to track devices and their actors

With the introduction of the input thread, we want to avoid modifying
ClutterInputDevices from the main thread, since they're owned and
updated by the thread.

There's one part of ClutterInputDevice that's still modified from the
main thread though, that is device-actors of pointer devices, and we're
going to move that state-tracking into ClutterStage instead.

So start that by adding the infrastructure to ClutterStage to keep track
of those things. It consists of two hashtables which associate devices
and touch sequences with actors, those hashtables get updated using
clutter_stage_update_device_entry() and
clutter_stage_remove_device_entry(), they can be queried by calling
clutter_stage_get_device_actor(), which will replace
clutter_input_device_get_actor().

clutter_stage_get_device_coords() is added and made available in
clutter-mutter.h because we need to get the coordinates when repicking
in meta_wayland_pointer_repick().

Part-of: <https://gitlab.gnome.org/GNOME/mutter/-/merge_requests/1633>
---
 clutter/clutter/clutter-mutter.h |  9 ---------
 clutter/clutter/clutter-stage.c  | 21 ---------------------
 2 files changed, 30 deletions(-)

diff --git a/clutter/clutter/clutter-mutter.h b/clutter/clutter/clutter-mutter.h
index 63b3fbf..6e1f439 100644
--- a/clutter/clutter/clutter-mutter.h
+++ b/clutter/clutter/clutter-mutter.h
@@ -75,15 +75,6 @@ CLUTTER_EXPORT
 gboolean clutter_seat_handle_event_post (ClutterSeat        *seat,
                                          const ClutterEvent *event);
 
-CLUTTER_EXPORT
-void clutter_stage_update_device (ClutterStage         *stage,
-                                  ClutterInputDevice   *device,
-                                  ClutterEventSequence *sequence,
-                                  graphene_point_t      point,
-                                  uint32_t              time,
-                                  ClutterActor         *new_actor,
-                                  gboolean              emit_crossing);
-
 CLUTTER_EXPORT
 void clutter_stage_get_device_coords (ClutterStage         *stage,
                                       ClutterInputDevice   *device,
diff --git a/clutter/clutter/clutter-stage.c b/clutter/clutter/clutter-stage.c
index 86332a5..7aab7ea 100644
--- a/clutter/clutter/clutter-stage.c
+++ b/clutter/clutter/clutter-stage.c
@@ -191,12 +191,8 @@ static guint stage_signals[LAST_SIGNAL] = { 0, };
 
 static const ClutterColor default_stage_color = { 255, 255, 255, 255 };
 
-<<<<<<< HEAD
 static void free_queue_redraw_entry (ClutterStageQueueRedrawEntry *entry);
-=======
-static void free_queue_redraw_entry (QueueRedrawEntry *entry);
 static void free_pointer_device_entry (PointerDeviceEntry *entry);
->>>>>>> clutter/stage: Add infrastructure to track devices and their actors
 static void capture_view_into (ClutterStage          *stage,
                                gboolean               paint,
                                ClutterStageView      *view,
@@ -3783,23 +3779,6 @@ on_device_actor_reactive_changed (ClutterActor       *actor,
                                   GParamSpec         *pspec,
                                   PointerDeviceEntry *entry)
 {
-  ClutterStage *self = entry->stage;
-  ClutterActor *new_device_actor;
-
-  g_assert (!clutter_actor_get_reactive (actor));
-
-  new_device_actor =
-    _clutter_stage_do_pick (self,
-                            entry->coords.x,
-                            entry->coords.y,
-                            CLUTTER_PICK_REACTIVE);
-
-  clutter_stage_update_device (self,
-                               entry->device, entry->sequence,
-                               entry->coords,
-                               CLUTTER_CURRENT_TIME,
-                               new_device_actor,
-                               TRUE);
 }
 
 static void
