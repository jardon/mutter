From: Carlos Garnacho <carlosg@gnome.org>
Date: Fri, 5 Jun 2020 17:04:25 +0200
Subject: backends/x11: Drop users of clutter_input_device_set_stage()

There is no getter, so this information is useless.

https://gitlab.gnome.org/GNOME/mutter/-/merge_requests/1486
---
 src/backends/x11/meta-seat-x11.c | 21 ---------------------
 1 file changed, 21 deletions(-)

diff --git a/src/backends/x11/meta-seat-x11.c b/src/backends/x11/meta-seat-x11.c
index e383d49..feae83a 100644
--- a/src/backends/x11/meta-seat-x11.c
+++ b/src/backends/x11/meta-seat-x11.c
@@ -1828,10 +1828,6 @@ meta_seat_x11_translate_event (MetaSeatX11  *seat,
                                       GINT_TO_POINTER (xev->deviceid));
         clutter_event_set_device (event, device);
 
-        if (clutter_input_device_get_device_mode (device) == CLUTTER_INPUT_MODE_LOGICAL &&
-            stage != NULL)
-          _clutter_input_device_set_stage (device, stage);
-
         /* XXX keep this in sync with the evdev device manager */
         n = print_keysym (event->key.keyval, buffer, sizeof (buffer));
         if (n == 0)
@@ -1876,11 +1872,6 @@ meta_seat_x11_translate_event (MetaSeatX11  *seat,
         device = g_hash_table_lookup (seat->devices_by_id,
                                       GINT_TO_POINTER (xev->deviceid));
 
-        /* Set the stage for core events coming out of nowhere (see bug #684509) */
-        if (clutter_input_device_get_device_mode (device) == CLUTTER_INPUT_MODE_LOGICAL &&
-            stage != NULL)
-          _clutter_input_device_set_stage (device, stage);
-
 	if (clutter_input_device_get_device_type (source_device) == CLUTTER_PAD_DEVICE)
           {
             /* We got these events because of the passive button grab */
@@ -2038,9 +2029,6 @@ meta_seat_x11_translate_event (MetaSeatX11  *seat,
             break;
           }
 
-        if (device->stage != NULL)
-          _clutter_input_device_set_stage (source_device, device->stage);
-
         if (xev->flags & XIPointerEmulated)
           _clutter_event_set_pointer_emulated (event, TRUE);
 
@@ -2072,11 +2060,6 @@ meta_seat_x11_translate_event (MetaSeatX11  *seat,
             break;
           }
 
-        /* Set the stage for core events coming out of nowhere (see bug #684509) */
-        if (clutter_input_device_get_device_mode (device) == CLUTTER_INPUT_MODE_LOGICAL &&
-            stage != NULL)
-          _clutter_input_device_set_stage (device, stage);
-
         if (scroll_valuators_changed (source_device,
                                       &xev->valuators,
                                       &delta_x, &delta_y))
@@ -2129,9 +2112,6 @@ meta_seat_x11_translate_event (MetaSeatX11  *seat,
                                              event->motion.y,
                                              &xev->valuators);
 
-        if (device->stage != NULL)
-          _clutter_input_device_set_stage (source_device, device->stage);
-
         if (xev->flags & XIPointerEmulated)
           _clutter_event_set_pointer_emulated (event, TRUE);
 
@@ -2152,7 +2132,6 @@ meta_seat_x11_translate_event (MetaSeatX11  *seat,
         XIDeviceEvent *xev = (XIDeviceEvent *) xi_event;
         device = g_hash_table_lookup (seat->devices_by_id,
                                       GINT_TO_POINTER (xev->deviceid));
-        _clutter_input_device_set_stage (device, stage);
       }
       /* Fall through */
     case XI_TouchEnd:
