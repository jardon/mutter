From: Sebastian Keller <skeller@gnome.org>
Date: Tue, 7 Nov 2023 00:23:19 +0100
Subject: delete: Don't wrongly set window as not alive when pings are
 disabled

meta_display_ping_window() does nothing when check-alive-timeout is set
to 0, but meta_window_check_alive_on_event() was relying on it to reset
the events_during_ping. Without this events_during_ping was just
counting up until the threshold was reached and the window was marked as
not alive, preventing further pointer events from being sent to the
window.

Fix this by not doing anything in meta_window_check_alive_on_event() if
check-alive-timeout is 0, similar to meta_display_ping_window().

Closes: https://gitlab.gnome.org/GNOME/mutter/-/issues/3142
Part-of: <https://gitlab.gnome.org/GNOME/mutter/-/merge_requests/3367>
(cherry picked from commit d978ab189012317f64dbc8f519393bb1456d9ba5)
---
 src/core/delete.c | 6 ++++++
 1 file changed, 6 insertions(+)

diff --git a/src/core/delete.c b/src/core/delete.c
index 1270ea0..888bf18 100644
--- a/src/core/delete.c
+++ b/src/core/delete.c
@@ -96,9 +96,15 @@ void
 meta_window_check_alive_on_event (MetaWindow *window,
                                   uint32_t    timestamp)
 {
+  unsigned int check_alive_timeout;
+
   if (!meta_window_can_ping (window))
     return;
 
+  check_alive_timeout = meta_prefs_get_check_alive_timeout ();
+  if (check_alive_timeout == 0)
+    return;
+
   meta_display_ping_window (window, timestamp);
 
   window->events_during_ping++;
