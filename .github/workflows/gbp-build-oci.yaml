name: GBP Build
on:
  workflow_call:
    inputs:
      branch:
        type: string
        description: Git branch to build
        default: vanilla/latest
  workflow_dispatch:
    inputs:
      branch:
        type: string
        description: Git branch to build
        default: vanilla/latest

jobs:
  gbp-build:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/vanilla-os/pico:main
      volumes:
        - /proc:/proc
        - /:/run/host
      options: --privileged -it
    steps:
      - name: Install Dependencies
        run: |
          echo "deb http://repo2.vanillaos.org/ sid main contrib non-free non-free-firmware" > /etc/apt/sources.list
          apt-key add /usr/share/keyrings/vanilla_keyring.gpg
          rm /etc/apt/sources.list.d/vanilla-base.sources
          apt update
          apt install -y git-buildpackage ubuntu-dev-tools gnome-pkg-tools git ${{ vars.ADD_PACKAGES }}
      - name: Create systemd Directory
        run: |
          mkdir -p /run/systemd/system
          mkdir -p /usr/lib/systemd/system
          mkdir -p /usr/lib/systemd/user
      - name: Configure Git
        run: git config --global --add safe.directory "$GITHUB_WORKSPACE"
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Configure GBP
        run: |
          cp debian/gbp.conf ~/.gbp.conf
          sed -i "s:debian/latest:${{ inputs.branch }}:g" ~/.gbp.conf
          cat ~/.gbp.conf
      - name: Import GPG Keys
        run: |
          sudo apt update
          sudo apt install -y ca-certificates
          echo "${{ secrets.GPG_PUB_KEY }}" > pub.key
          echo "${{ secrets.GPG_PRIVATE_KEY }}" > private.key
          gpg --import pub.key
          gpg --import private.key
          rm *.key
      - name: Configure Devscripts
        run: |
          FINGERPRINT=$(gpg --list-keys --with-colons --fingerprint | awk -F: '$1 == "fpr" {print $10;}' | awk 'NR==1{print $1}')
          cp .github/config/.devscripts ~/
          sed -i "s/<gpg.key>/$FINGERPRINT/g" ~/.devscripts
          sed -i "s/<name>/${{ secrets.USER }}/g" ~/.devscripts
          sed -i "s/<email>/${{ secrets.EMAIL }}/g" ~/.devscripts
      - name: Checkout Branches
        run: |
          git checkout pristine-tar
          git checkout ${{ inputs.branch }}
      - name: Build Package
        run: |
          DEB_BUILD_OPTIONS=nocheck dpkg-buildpackage -b -uc -us
      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ github.event.repository.name }}
          path: |
            ~/work/${{ github.event.repository.name }}/${{ github.event.repository.name }}/build-area/*
            ~/work/${{ github.event.repository.name }}/${{ github.event.repository.name }}/tarballs/*
      - name: Clean Up
        if: always()
        run: |
          rm -rf ~/.ssh
          rm -rf ~/.gnupg
